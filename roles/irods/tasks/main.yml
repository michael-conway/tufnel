---

- name: Create PostgrSQL Database
  sudo: yes
  sudo_user: postgres
  postgresql_db: name={{icat_db}}

- name: grant access to user
  sudo: yes
  sudo_user: postgres
  postgresql_user: db={{icat_db}} name={{icat_irods_user}} password={{icat_irods_password}} priv=ALL

- name: ensure user does not have unnecessary privilege
  sudo: yes
  sudo_user: postgres
  postgresql_user: name={{icat_irods_user}} role_attr_flags=NOSUPERUSER,NOCREATEDB

- name: download iCAT
  get_url: url={{ irods_icat }} dest=/home/{{ ansible_ssh_user }}/

- name: download iRODS postgreSQL plugin
  get_url: url={{ irods_postgres }} dest=/home/{{ ansible_ssh_user }}/

- name: install iRODS dependencies
  apt:
      name: "{{item}}"
      state: latest
  with_items:
      - python-jsonschema
      - python-pip

- name: Install iCAT  Plugins
  shell: 
     dpkg -i /home/{{ ansible_ssh_user }}/{{ icat_pkg }};
     apt-get -y -f install

- name: Install  Database Plugins
  shell:
     dpkg -i  /home/{{ ansible_ssh_user }}/{{ postgres_pkg }};
     apt-get -y -f install

- name: response bootstrapping
  template: src=genresponse.j2 dest=/home/{{ ansible_ssh_user }}/genresponse.sh

- name: generate setup responses
  shell: 
     mkdir -p /opt/irods;
     mv /home/{{ ansible_ssh_user }}/genresponse.sh /opt/irods/genresponse.sh;
     chmod +x /opt/irods/genresponse.sh;
     /opt/irods/genresponse.sh /opt/irods/setup_responses

- name: Install python packages
  shell: pip install -U pip jsonschema jinja2

- name: irods setup requires FQDN
  hostname: name={{ ansible_fqdn }}

- name: config iCAT server
  shell: /var/lib/irods/packaging/setup_irods.sh < /opt/irods/setup_responses

- name: make ssl dir
  file: path=/var/lib/irods/iRODS/server/config/certs owner=irods group=irods mode=0644 state=directory

- name: copy over ssl cert
  copy: src=server.crt dest=/var/lib/irods/iRODS/server/config/certs/server.crt owner=irods group=irods mode=0644

- name: copy over ssl private key
  copy: src=server.key dest=/var/lib/irods/iRODS/server/config/certs/server.key owner=irods group=irods mode=0644

- name: copy over dhparams
  copy: src=dhparams.pem dest=/var/lib/irods/iRODS/server/config/certs/dhparams.pem owner=irods group=irods mode=0644

- name: configure irods server config
  sudo: yes
  template:
    src: server_config.json
    dest: /etc/irods/server_config.json

- name: configure irods environment
  sudo: yes
  template:
    src: irods_environment.json
    dest: /var/lib/irods/.irods/irods_environment.json

- name: copy enable pam for irods
  sudo: yes
  copy: src=irods dest=/etc/pam.d/irods owner=root group=root mode=0644

- name: Creating pam user "{{ pam_user }}" without admin access
  user: name={{ pam_user}} password={{ pam_user |password_hash('sha512') }}

- name: copy over core re with test instrumentation
  copy: src=core.re dest=/etc/irods/core.re owner=irods group=irods mode=0644

